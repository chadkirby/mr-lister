// Generated by CoffeeScript 1.10.0
(function() {
  var any, consolidateAlphaRanges, consolidateRanges, every, isInt, isNumber, listString, ref, toString, unique;

  ref = require('./utils'), isNumber = ref.isNumber, isInt = ref.isInt, unique = ref.unique, consolidateRanges = ref.consolidateRanges, consolidateAlphaRanges = ref.consolidateAlphaRanges, every = ref.every, any = ref.any;

  toString = Object.prototype.toString;

  listString = function(me, options) {
    var a, andOrProvided, andor, arr, article, comma, complex, delimiter, isRange, item, ref1, ref2, ref3, ref4;
    if (options == null) {
      options = {};
    }
    if (toString.call(options) === '[object String]') {
      andor = options;
      options = {
        article: arguments[2],
        comma: arguments[3]
      };
    } else {
      andor = (ref1 = (ref2 = options.andor) != null ? ref2 : options.conjunction) != null ? ref1 : 'and';
    }
    andOrProvided = (andor != null ? andor.length : void 0) > 0;
    article = options.article;
    comma = (ref3 = (ref4 = options.comma) != null ? ref4 : options.separator) != null ? ref3 : ', ';
    isRange = every(me, isInt);
    if (isRange) {
      arr = consolidateRanges((function() {
        var i, len, results;
        results = [];
        for (i = 0, len = me.length; i < len; i++) {
          a = me[i];
          results.push(parseInt(a));
        }
        return results;
      })());
    } else {
      isRange = every(me, function(item) {
        return /^[a-z]$/i.test(item);
      });
      if (isRange) {
        arr = consolidateAlphaRanges(me);
      }
    }
    if (me.length > 2) {
      if (isRange) {
        if (arr.length > 2) {
          delimiter = comma;
        }
      } else {
        complex = any(me, function(item) {
          return /,/.test(item);
        });
        delimiter = complex ? '; ' : comma;
      }
    }
    if (delimiter == null) {
      delimiter = andOrProvided ? andor : '';
      if (/^[\w\/]+$/i.test(delimiter)) {
        delimiter = " " + delimiter + " ";
      }
    }
    if (arr == null) {
      arr = me.slice(0);
    }
    if ((article != null ? article.length : void 0) > 0) {
      arr = (function() {
        var i, len, results;
        results = [];
        for (i = 0, len = arr.length; i < len; i++) {
          item = arr[i];
          results.push(article + " " + item);
        }
        return results;
      })();
    }
    if (andOrProvided && (arr.length > 2)) {
      arr.push(andor + " " + (arr.pop()));
    }
    return arr.join(delimiter);
  };

  module.exports = listString;

}).call(this);
